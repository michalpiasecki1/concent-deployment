user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    # include /etc/nginx/conf.d/*http.conf;
    resolver kube-dns.kube-system.svc.cluster.local;

    map $http_accept $extension {
        default html;
        application/json json;
    }

    {% if not nginx_proxy_allow_http %}
    # HTTP -> HTTPS redirect
    server {
        listen 80      default_server;
        listen [::]:80 default_server;
        server_name    {{ cluster_address }};
        return 302     https://$server_name$request_uri;

    }
    {% endif %}

    server {
        {% if nginx_proxy_allow_http %}
        # HTTP
        listen 80       default_server;
        {% endif %}
        # HTTPS
        listen 443      ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        ssl_certificate     /etc/ssl/secrets/nginx-proxy-ssl.crt;
        ssl_certificate_key /etc/ssl/secrets/nginx-proxy-ssl.key;

        gzip            on;
        gzip_min_length 1000;
        gzip_proxied    expired no-cache no-store private auth;
        gzip_types      text/plain text/css text/javascript application/xml;
        include         snippets/error-pages.conf;

        location / {
            root    /srv/http/nginx-proxy;
            index   index.html index.htm;
        }

        location /api-docs/ {
            alias /srv/http/concent-api-docs/html/;
        }

        location /static/ {
            alias /srv/http/concent-api-assets/static-root/;
        }

        location ~ ^/(api|admin)/ {
            set $concent_api_backend http://concent-api.default.svc.cluster.local;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $remote_addr;
            proxy_set_header Host              $http_host;
            proxy_pass                         $concent_api_backend;
        }

        location ~ ^/(download|upload)/ {
            set $nginx_storage_backend http://nginx-storage.default.svc.cluster.local;
            client_max_body_size               {{ max_upload_size }};
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For   $remote_addr;
            proxy_set_header Host              $http_host;
            proxy_pass                         $nginx_storage_backend;
        }
    }
}


# TCP connection
stream {

    log_format basic '$remote_addr [$time_local] '
                     '$protocol $status $bytes_sent $bytes_received '
                     '$session_time';


    # include /etc/nginx/conf.d/tcp/*tcp.conf;

    resolver kube-dns.kube-system.svc.cluster.local;

    # TCP connection
    server {
        access_log /var/log/nginx/access.log basic buffer=32k;

        listen     9055;
        proxy_pass middleman.default.svc.cluster.local:9054;
    }
}
