apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  creationTimestamp: 2018-02-26T13:41:13Z
  generation: 1
  labels:
    k8s-app: fluentd-gcp
    kubernetes.io/cluster-service: "true"
    version: v2.0.16
  name: fluentd-gcp-v2.0.16
  namespace: kube-system
  resourceVersion: "12419071"
  selfLink: /apis/extensions/v1beta1/namespaces/kube-system/daemonsets/fluentd-gcp-v2.0.16
  uid: b64e488f-1afa-11e8-9d9f-42010a9c008a
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: fluentd-gcp-custom
      kubernetes.io/cluster-service: "true"
      version: v2.0.16
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: fluentd-gcp-custom
        kubernetes.io/cluster-service: "true"
        version: v2.0.16
    spec:
      containers:
      - env:
        - name: FLUENTD_ARGS
          value: --no-supervisor -q
        image: gcr.io/google-containers/fluentd-gcp:2.0.16
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
                exit 1;
              fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
                rm -rf /var/log/fluentd-buffers;
                exit 1;
              fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
                exit 1;
              fi;
          failureThreshold: 3
          initialDelaySeconds: 600
          periodSeconds: 60
          successThreshold: 1
          timeoutSeconds: 1
        name: fluentd-gcp
        resources:
          limits:
            memory: 300Mi
          requests:
            cpu: 100m
            memory: 200Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/log
          name: varlog
        - mountPath: /var/lib/docker/containers
          name: varlibdockercontainers
          readOnly: true
        - mountPath: /host/lib
          name: libsystemddir
          readOnly: true
        - mountPath: /etc/fluent/config.d
          name: config-volume
      - command:
        - /monitor
        - --stackdriver-prefix={{ prometheus_to_sd_prefix }}/addons
        - --api-override={{ prometheus_to_sd_endpoint }}
        - --source=fluentd:http://localhost:31337?whitelisted=stackdriver_successful_requests_count,stackdriver_failed_requests_count,stackdriver_ingested_entries_count,stackdriver_dropped_entries_count
        - --pod-id=$(POD_NAME)
        - --namespace-id=$(POD_NAMESPACE)
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        image: gcr.io/google-containers/prometheus-to-sd:v0.2.4
        imagePullPolicy: IfNotPresent
        name: prometheus-to-sd-exporter
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: Default
      nodeSelector:
        beta.kubernetes.io/fluentd-ds-ready: "true"
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: fluentd-gcp
      serviceAccountName: fluentd-gcp
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: node.alpha.kubernetes.io/ismaster
      - effect: NoExecute
        operator: Exists
      - effect: NoSchedule
        operator: Exists
      volumes:
      - hostPath:
          path: /var/log
          type: ""
        name: varlog
      - hostPath:
          path: /var/lib/docker/containers
          type: ""
        name: varlibdockercontainers
      - hostPath:
          path: /usr/lib64
          type: ""
        name: libsystemddir
      - configMap:
          defaultMode: 420
          name: fluentd-gcp-config-filtered
        name: config-volume
  templateGeneration: 1
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
status:
  currentNumberScheduled: 2
  desiredNumberScheduled: 2
  numberMisscheduled: 0
  numberReady: 0
  numberUnavailable: 2
  observedGeneration: 1
  updatedNumberScheduled: 2
