Vagrant.configure("2") do |config|

    # Install vagrant plugin that fix a problem with mounting vboxsf
    required_plugins = %w( vagrant-vbguest vagrant-triggers )
    _retry = false
    required_plugins.each do |plugin|
        unless Vagrant.has_plugin? plugin
            system "vagrant plugin install #{plugin}"
            _retry=true
        end
    end

    if (_retry)
        exec "vagrant " + ARGV.join(' ')
    end

    config.vm.box      = "debian/stretch64"
    config.vm.hostname = "concent-development-vm"
    config.vm.synced_folder ".", "/vagrant", disabled: true


    config.vm.network "private_network", ip: "172.40.2.3"

    config.vm.provider :virtualbox do |virtualbox|
        virtualbox.memory = 2048
        virtualbox.gui    = false
    end

    blockchain_disk = './disk/blockchain_disk.vdi'
    config.vm.provider "virtualbox" do |vb|
        if not File.exists?(blockchain_disk)
          vb.customize ['createhd', '--filename', blockchain_disk, '--variant', 'Fixed', '--size', 30 * 1024]
        end
        vb.customize ['storageattach', :id, '--storagectl', 'SATA Controller', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', blockchain_disk, '--hotpluggable', 'on']
    end

        if not File.exists?(blockchain_disk)
            config.vm.provision "shell", inline: <<-SHELL
                sudo mkfs.ext4 /dev/sdb
            SHELL
        end

    config.vm.provision "shell", run: "always", inline: <<-SHELL
        directory=/home/vagrant/blockchain
        if [ ! -d "$directory" ]; then
            mkdir $directory
        fi
        mountpoint -q $directory || sudo mount /dev/sdb $directory
    SHELL

    config.trigger.after :halt do
        info "dettach drive"
        machineId = File.read(".vagrant/machines/default/virtualbox/id")
        run "VBoxManage storageattach '#{machineId}'" +
        " --storagectl 'SATA Controller' --port 1 --device 0 --type hdd --medium none"
    end

    config.trigger.before :destroy do
        # The vagrant destroy virtual machine with attached disk.
        # We don't want to destroy disk which contain blockchain, so before destroy we attached another disk with parameter none
        info "dettach drive"
        machineId = File.read(".vagrant/machines/default/virtualbox/id")
        run "VBoxManage storageattach '#{machineId}'" +
        " --storagectl 'SATA Controller' --port 1 --device 0 --type hdd --medium none"
    end

    config.vm.provision "ansible", run: "always" do |ansible|
        ansible.playbook       = "configure.yml"
        ansible.extra_vars     = {
            CONCENT_DEPLOYMENT_VERSION: "master",
          }
        ansible.inventory_path = "./inventory"
        ansible.limit          = "all"
    end

end
